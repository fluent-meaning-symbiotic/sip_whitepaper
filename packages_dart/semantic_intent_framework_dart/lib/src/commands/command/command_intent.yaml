semantic_intent:
  version: 1
  name: SemanticCommandIntent
  type: SemanticCommandIntent
  meaning: "Defines the base semantic command interface for all commands in the framework"
  description: "Core command interface that all semantic commands must implement to ensure proper semantic meaning propagation and state management"
  semantic_properties:
    command_type: "Base command type that all semantic commands extend from"
    state_management: "Optional state management capabilities"
  semantic_validations:
    - "All commands must be immutable"
    - "Commands must have clear semantic meaning"
    - "Commands must handle state safely if they manage state"
  output_artifacts:
    - command.dart
    - command_test.dart
    - command_accessor.dart
  test_categories:
    - type: "unit"
      priority: "high"
      meanings:
        - "Verify command immutability"
        - "Test state access patterns"
        - "Validate command type safety"
  scratchpad_todo:
    - "Add state validation helpers"
    - "Implement command composition patterns"
